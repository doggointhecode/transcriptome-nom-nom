> table=read.table("SampleTable.as.actualid.comb.nf54co_zonality_figures.txt",header=TRUE)
> samplename=table$Sample_Name
> name=table$Sample_Path
> cond=table$Condition_1
> batch=table$Batch
> Treatment=table$Treatment
> Status=table$Status
> SampleTable=data.frame(sampleName=samplename,filename=name,condition=cond, batch=batch, Status=Status, Treatment=Treatment)
> ddsHTSeq = DESeqDataSetFromHTSeqCount(sampleTable = SampleTable, design = ~ condition)
> keep = rowSums(counts(ddsHTSeq)) >= 10
> dds=ddsHTSeq[keep,]
> dds=DESeq(dds)

> vsd<- vst(dds, blind=F)

> jpeg('testpca.jpeg', height = 6, width = 12, units = 'in', res = 600)
> pcaData <- plotPCA(vsd, intgroup=c("Treatment", "Status"), returnData=TRUE)
> percentVar <- round(100 * attr(pcaData, "percentVar"))
> ggplot(pcaData, aes(PC1, PC2, color=Treatment, shape=Status)) +     geom_point(size=5) + theme_classic(base_size=22)+
     xlab(paste0("PC1: ",percentVar[1],"% variance")) +
     ylab(paste0("PC2: ",percentVar[2],"% variance"))+ scale_color_manual(values = c("Fresh"="brown1", "Mock" = "cornflowerblue", "IWP2"="darkorchid2", "SB"="forestgreen", "5C"="goldenrod3"))
> dev.off()

#VOLCANO PLOT WITH LABELS

#edited the csv file. Added gene symbol column with script. Sorted first downreg genes by 'stat' column. And then same for upreg genes. Made a final column that says DeLabel. Put 15 genes up and 15 genes down.

jpeg('test.vol.jpeg', res = 600, units = 'in', width = 11, height = 8)
p <- ggplot(data=vol_b27vsfresh, aes(x=log2FoldChange, y=-log10(padj), col=DiffExpr, label=DeLabel)) + geom_point(shape=16, size=2) + theme_classic(base_size = 22)+ geom_text_repel()+ ylim(0, 115)
# p <- ggplot(data=vol_b27vsfresh, aes(x=log2FoldChange, y=-log10(padj), col=DiffExpr, label=DeLabel)) + geom_point(shape=16, size=2) + theme_classic(base_size = 22)+ geom_text_repel()+ scale_y_break(c(115, 225))
#this option introduces kink but messes up labels (double labels of genes), so I reduced the ylim to exclude the single gene at very high -log10(padj). 
p2 <- p + scale_color_manual(values=c("cornflowerblue", "lightgrey", "brown1"))
p2
dev.off()



#DOTPLOT for GO terms

png('dotplot_infvshep_b27_upreg.png', units = 'in', width = 9, height = 7, res = 600)
p<- dotplot(go_infvhep_up)
p+ theme_classic(base_size = 22) +scale_colour_gradient()
dev.off()


VENN DIAGRAM IN GGVENN

c5c.up<- read.table('venn.5c.up.txt')
c5c.down<- read.table('venn.5c.down.txt')
c5c.up.venn<- unlist(c5c.up)
c5c.down.venn<- unlist(c5c.down)
x<- list(A=iwp.up.venn, B=sb.up.venn, C=c5c.up.venn)
names(x) <- c("Upregulated in IWP2","Upregulated in SB", "Upregulated in 5C")
ggvenn(x, fill_color = c("aquamarine2", "darkorchid1", "deeppink"), stroke_size = 1, set_name_size = 8, text_size = 8)
png('venn_iwp.sb.5c_upreg.png', res = 600, height = 12, width = 12, units = 'in')
ggvenn(x, fill_color = c("aquamarine2", "darkorchid1", "deeppink"), stroke_size = 1, set_name_size = 8, text_size = 8)
dev.off()

x<- list(A=venn.iwp.up, B=venn.sb.up)
names(x) <- c("Upregulated in IWP2", "Upregulated in SB")
png('venn_iwp.sb.upreg.png', res = 600, height = 12, width = 12, units = 'in')
ggVennDiagram(x, set_size = 12, label_size = 8)+ ggplot2::scale_fill_gradient(low="aquamarine2",high = "white")
dev.off()

png('venn_iwp.sb.upreg_2.png', res = 600, height = 12, width = 12, units = 'in')
ggVennDiagram(x, set_size = 12, label_size = 8)+ ggplot2::scale_fill_gradient(low="white",high = "darkorchid1")
dev.off()



> aqua=colorRampPalette(c("aquamarine2", "aquamarine2"))
> white=colorRampPalette(c("white", "white"))

> png('venn_iwp.sb.down.iwp2spec.png', res = 600, height = 12, width = 12, units = 'in')
> ggVennDiagram(x, set_size = 11, label_size = 8)+  scale_fill_gradientn(colors=c(aqua(8), white(178), white(837)))

> brown=colorRampPalette(c("brown3", "brown3"))
> ggVennDiagram(x, set_size = 11, label_size = 8)+  scale_fill_gradientn(colors=c(whites(10), brown(180), whites2(837)))
> png('venn_iwp.sb.down.intersect.png', res = 600, height = 12, width = 12, units = 'in')
> ggVennDiagram(x, set_size = 11, label_size = 8)+  scale_fill_gradientn(colors=c(white(10), brown(180), whites2(837)))
