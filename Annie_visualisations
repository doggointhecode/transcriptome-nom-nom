> table=read.table("SampleTable.as.actualid.comb.nf54co_zonality_figures.txt",header=TRUE)
> samplename=table$Sample_Name
> name=table$Sample_Path
> cond=table$Condition_1
> batch=table$Batch
> Treatment=table$Treatment
> Status=table$Status
> SampleTable=data.frame(sampleName=samplename,filename=name,condition=cond, batch=batch, Status=Status, Treatment=Treatment)
> ddsHTSeq = DESeqDataSetFromHTSeqCount(sampleTable = SampleTable, design = ~ condition)
> keep = rowSums(counts(ddsHTSeq)) >= 10
> dds=ddsHTSeq[keep,]
> dds=DESeq(dds)

> vsd<- vst(dds, blind=F)

> jpeg('testpca.jpeg', height = 6, width = 12, units = 'in', res = 600)
> pcaData <- plotPCA(vsd, intgroup=c("Treatment", "Status"), returnData=TRUE)
> percentVar <- round(100 * attr(pcaData, "percentVar"))
> ggplot(pcaData, aes(PC1, PC2, color=Treatment, shape=Status)) +     geom_point(size=5) + theme_classic(base_size=22)+
     xlab(paste0("PC1: ",percentVar[1],"% variance")) +
     ylab(paste0("PC2: ",percentVar[2],"% variance"))+ scale_color_manual(values = c("Fresh"="brown1", "Mock" = "cornflowerblue", "IWP2"="darkorchid2", "SB"="forestgreen", "5C"="goldenrod3"))
> dev.off()

#VOLCANO PLOT WITH LABELS

#edited the csv file. Added gene symbol column with script. Sorted first downreg genes by 'stat' column. And then same for upreg genes. Made a final column that says DeLabel. Put 15 genes up and 15 genes down.

jpeg('test.vol.jpeg', res = 600, units = 'in', width = 11, height = 8)
p <- ggplot(data=vol_b27vsfresh, aes(x=log2FoldChange, y=-log10(padj), col=DiffExpr, label=DeLabel)) + geom_point(shape=16, size=2) + theme_classic(base_size = 22)+ geom_text_repel()+ ylim(0, 115)
# p <- ggplot(data=vol_b27vsfresh, aes(x=log2FoldChange, y=-log10(padj), col=DiffExpr, label=DeLabel)) + geom_point(shape=16, size=2) + theme_classic(base_size = 22)+ geom_text_repel()+ scale_y_break(c(115, 225))
#this option introduces kink but messes up labels (double labels of genes), so I reduced the ylim to exclude the single gene at very high -log10(padj). 
p2 <- p + scale_color_manual(values=c("cornflowerblue", "lightgrey", "brown1"))
p2
dev.off()
